const anchor = require('@project-serum/anchor')

// Need the system program
const {SystemProgram} = anchor.web3

const main = async () => {
  console.log('--------------------')
  console.log('🚀 Starting tests...')
  console.log('⏳ 1. It initializes the program with 0 total_gifs')

  // set chain provider to use data generated by solana config get (local env in this case)
  const provider = anchor.Provider.env()
  anchor.setProvider(provider)

  // anchor automatically compiles the program in lib.rs
  const {Myepicproject: MyEpicProjectProgram} = anchor.workspace // Anchor knows to look at programs/myepicproject/src/lib.rs b/c we used anchor.workspace.Myepicproject.

  // create some credentials (keypair) for our BaseAccount we;re creating.
  const baseAccount = anchor.web3.Keypair.generate()

  // call start_stuff_off, pass it the params we defined i `pub struct StartStuffOff`
  let tx = await MyEpicProjectProgram.rpc.startStuffOff({
    // function start_stuff_off is camelCase in JS thanks to Anchor 🤝
    accounts: {
      baseAccount: baseAccount.publicKey,
      user: provider.wallet.publicKey,
      systemProgram: SystemProgram.programId,
    },
    signers: [baseAccount],
  })
  console.log('🧾 Your transaction signature: ', tx)

  // Fetch data from the program account.
  let programAccount = await MyEpicProjectProgram.account.baseAccount.fetch(
    baseAccount.publicKey,
  )
  console.log('🧾 Program Account: ', programAccount)
  let gifs = programAccount.totalGifs.toString()
  console.log('👀 Total gifs:', gifs)
  if (parseInt(gifs) === 0) {
    console.log('✅ Test passed! 🎉')
    console.log('--------------------')
  } else {
    console.log('❌ Test failed! 💥')
    console.log('--------------------')
  }

  console.log('⏳ 2. It adds a gif')
  await MyEpicProjectProgram.rpc.addGif({
    // AddGif context only accepts baseAccount
    accounts: {
      baseAccount: baseAccount.publicKey,
    },
  })

  programAccount = await MyEpicProjectProgram.account.baseAccount.fetch(
    baseAccount.publicKey,
  )
  console.log('🧾 Program Account: ', programAccount)
  gifs = programAccount.totalGifs.toString()
  console.log('👀 Total gifs:', gifs)

  if (parseInt(gifs) === 1) {
    console.log('✅ Test passed! 🎉')
    console.log('--------------------')
  } else {
    console.log('❌ Test failed! 💥')
    console.log('--------------------')
  }
}

// Just to run our main function asynchrosly
const runMain = async () => {
  try {
    await main()
    process.exit(0)
  } catch (e) {
    console.error(e)
    process.exit(1)
  }
}

runMain()
